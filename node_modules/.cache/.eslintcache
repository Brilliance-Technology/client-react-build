[{"/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/index.js":"1","/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/reportWebVitals.js":"2","/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/Components/Routes/Route.js":"3","/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/Components/Dashboard/Dashboard.js":"4","/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/Components/Register/Register.js":"5","/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/Components/Dashboard/Edit.js":"6","/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/Components/Notfound/NotFound.js":"7","/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/Components/Dashboard/Table.js":"8"},{"size":569,"mtime":1638524741472,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1627131970000,"results":"11","hashOfConfig":"10"},{"size":684,"mtime":1638526384650,"results":"12","hashOfConfig":"10"},{"size":2465,"mtime":1637929114276,"results":"13","hashOfConfig":"10"},{"size":6505,"mtime":1637929118183,"results":"14","hashOfConfig":"10"},{"size":6680,"mtime":1637927930830,"results":"15","hashOfConfig":"10"},{"size":117,"mtime":1627139274000,"results":"16","hashOfConfig":"10"},{"size":4601,"mtime":1637927898089,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mxk5vb",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/index.js",[],"/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/reportWebVitals.js",[],"/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/Components/Routes/Route.js",["38"],"/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/Components/Dashboard/Dashboard.js",["39","40","41","42","43","44","45","46","47"],"import React, { useEffect, useState ,useRef } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport \"./Table.css\";\nimport Table from \"./Table\";\nimport { Row } from \"react-bootstrap\";\n\nconst Dashboard = () => {\n  const [dashboard, setDashboard] = useState(null);\n  const history = useNavigate();\n  const [data, setData] = useState();\n  const inputElement = useRef(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [item, setItem] = useState({});\n\n  const createUser = {\n    backgroundColor: \"none\",\n    boxShadow: \"2px 2px 7px grey\",\n    border: \"none\",\n    width: \"150px\",\n    color: \"darkgreen\",\n    borderRadius: \"20px\",\n    height: \"40px\"\n  };\n\n  const getSearchTerm = () => {\n    searchHandler(inputElement.current.value);\n  };\n  \n  const searchHandler = (searchTerm) => {\n    setSearchTerm(searchTerm);\n    if (searchTerm !== \"\") {\n      const newItemsList = item.filter((items) => {\n        // console.log(Object.values(item));\n        return Object.values(items)\n          .join(\"\")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newItemsList);\n    } else {\n      setSearchResults(item);\n    }\n  };\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"col-10\">\n        <a className=\"navbar-brand font\" href=\"/\">\n            Student Management System\n        </a>\n      </div>\n      <div className=\"col-2\">\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarText\"\n          aria-controls=\"navbarText\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <Row>\n            \n              <button style={createUser}><Link className=\"nav-link active\" aria-current=\"page\" to='/register'>+ Create</Link></button>\n           \n        </Row>\n        </div>\n      </nav>\n\n      <div className=\"table_container\">\n        \n        <h5\n        style={{\n                textAlign:\"center\"\n                      }}\n        >User Information</h5>\n        \n\n        <Table\n          data={data}\n          // show={show}\n          // handleClose={handleClose}\n          // handleShow={handleShow}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/Components/Register/Register.js",["48","49","50","51","52","53","54","55"],"import React, { useState } from \"react\";\nimport styles from \"./Register.css\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useNavigate} from \"react-router-dom\";\nimport { Row, Alert } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport ImageUploading from 'react-images-uploading';\nimport Dashboard from '../Dashboard/Dashboard'\nconst Register = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const navigate = useNavigate();\n  const [message, setMessage] = useState();\n\n  const [user, setUser] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    dob: \"\",\n    percentage: \"\",\n  });\n  \n  const [image, setImages] = useState({\n    profile_picture: \"\",\n  });\n  const [success, setSuccess] = useState(false);\n  const [fail, setFail] = useState(false);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setUser({ ...user, [e.target.name]: e.target.value });\n    console.log(user);\n  };\n\n  const onChange = (e) => {\n    setImages({ profile_picture: e.target.files[0] });\n  };\n   const formData = {\n    firstname: user.firstname,\n    lastname: user.lastname,\n    dob: user.dob,\n    percentage: user.percentage,\n    profile_picture: image.profile_picture,\n  };\n  const onSubmit = async (e) => {\n      const formData = new FormData();\n      formData.append(\"firstname\",user.firstname);\n      formData.append(\"lastname\", user.lastname);\n      formData.append(\"dob\", user.dob);\n      formData.append(\"percentage\", user.percentage);\n      formData.append(\"profile_picture\", image.profile_picture);\n    e.preventDefault();\n    await Axios.post(\n      \"https://student-management01.herokuapp.com/student/create\",\n      formData\n      \n    ).then((res) => {\n      if (res) {\n        setSuccess(true);\n        navigate('/')\n        \n      } else {\n        console.log(res);\n        setFail(true);\n      }\n    });\n\n    \n  };\n  return (\n    <div\n      className={`${styles.container} container-fluid d-flex align-items-center justify-content-center`}\n    >\n      <div className=\"registrationFormContainer\">\n        <Alert show={success} variant=\"success\">\n          Registerd SuccessFully\n        </Alert>\n        <Alert show={fail} variant=\"danger\">\n          Registeration Failed\n        </Alert>\n       \n\n        <fieldset className=\" p-3\">\n          <legend className=\"registrationFormLegend text-center\">\n            Registration Form\n          </legend>\n          <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\n            <div className=\"form-group\">\n              <label htmlFor=\"inputForName\">Student Name</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                name=\"firstname\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-describedby=\"Enter your name\"\n                placeholder=\"Enter your name\"\n                value={user.firstname}\n                onChange={handleChange}                                                                              \n              />\n              {errors.name && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.firstname.message}\n                </span>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"inputForName\">Student Lastname</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                name=\"lastname\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-describedby=\"Enter your Lastname\"\n                placeholder=\"Enter your Lastname\"\n                value={user.lastname}\n                onChange={handleChange}\n              />\n              {errors.lastname && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.lastname.message}\n                </span>\n              )}\n            </div>\n            \n            <div className=\"form-group \">\n              <label htmlFor=\"inputForEmail\">Enter Date of Birth</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                id=\"inputFordob\"\n                name=\"dob\"\n                type=\"date\"\n                className=\"form-control\"\n                aria-describedby=\"Enter date of birth\"\n                placeholder=\"Enter date of birth\"\n                value={user.dob}\n                onChange={handleChange}\n              />\n              {errors.dob && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.dob.message}\n                </span>\n              )}\n            </div>\n\n            <div className=\"form-group \">\n              <label htmlFor=\"inputForEmail\">Enter Percentage</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                id=\"inputForPercentage\"\n                name=\"percentage\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-describedby=\"Enter Percentage\"\n                placeholder=\"Enter Percentage \"\n                value={user.percentage}\n                onChange={handleChange}\n                \n              />\n              {errors.percentage && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.email.message}\n                </span>\n              )}\n            </div>\n            \n\n            <div className=\"form-group\">\n              <label htmlFor=\"inputForPassword\">Uplode Profile Image</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                type=\"file\"\n                name=\"profile_picture\"\n                className=\"form-control\"\n                placeholder=\"Enter Profile Picture\"\n                accept=\"image/*\"\n                defaultValue={image.profile_picture.name}\n                onChange={onChange}\n\n              />\n              {errors.profile_picture && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.profile_picture.message}\n                </span>\n              )}\n            </div>\n\n            <div className=\"d-flex pt-4 align-items-center justify-content-center\">\n              <button type=\"submit\" className=\"register_btn\">\n                Submit\n              </button>\n              <button className=\"login-btn\">\n                <Link to=\"/\">Back</Link>\n              </button>\n            </div>\n          </form>\n        </fieldset>\n      </div>\n    </div>\n  );\n};\nexport default Register;\n","/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/Components/Dashboard/Edit.js",["56","57","58","59","60","61"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"../Register/Register.css\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useParams,useNavigate } from \"react-router-dom\";\nimport { Row , Alert} from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst Edit = () => {\n  const { id } = useParams([]);\n  const [user, setUsers] = useState(\"\");\n  const [newuser, setNewUser] = useState(\"\");\n  const [status, setStatus] = useState(false);\n  \n  const navigate = useNavigate();\n  \n  const [success, setSuccess] = useState(false);\n  const [fail, setFail] = useState(false);\n  const handleChange = (e) => {\n    e.preventDefault();\n    setNewUser({ [e.target.name]: e.target.value });\n  };\n  const newData = {\n    firstname:newuser.firstname,\n    lastname:newuser.lastname,\n    dob: newuser.dob,\n    percentage: newuser.percentage,\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const [message, setMessage] = useState();\n  const onSubmit = async(data, e) => {\n\n    console.log(newData);\n     await axios.put(`https://student-management01.herokuapp.com/student/edit/${id}`, newData\n    ).then((response) => {\n      if (response) {\n        setSuccess(true);\n        navigate('/')\n      }\n      else{\n        setFail(true);\n      }\n     \n     \n    });\n  };\n\n  useEffect(async () => {\n    await axios.get(`https://student-management01.herokuapp.com/student/get/${id}`)\n      .then((res) => {\n        const response = res.data.res;\n        console.log(response);\n        setUsers(response);\n      })\n\n  }, [user]);\n  return (\n    <div\n      className={`${styles.container} container-fluid d-flex align-items-center justify-content-center`}\n    >\n    <Alert show={success} variant=\"success\">\n          Registerd SuccessFully\n        </Alert>\n        <Alert show={fail} variant=\"danger\">\n          Registeration Failed\n        </Alert>\n       \n      <div className=\"registrationFormContainer\">\n        {message && (\n          <div\n            className={`alert fade show d-flex ${message.type}`}\n            role=\"alert\"\n          >\n            {message.data}\n            <span\n              aria-hidden=\"true\"\n              className=\"ml-auto cursor-pointer\"\n              onClick={() => setMessage(null)}\n            >\n              &times;\n            </span>\n          </div>\n        )}\n        <fieldset className=\" p-3\">\n          <legend className=\"registrationFormLegend text-center\">\n            Edit User Details\n          </legend>\n          {/* {user.map((val, index) => ( */}\n          <form onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\" >\n          \n            <div className=\"form-group\">\n              <label htmlFor=\"inputForName\">Student Name</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                name=\"firstname\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-describedby=\"Enter your name\"\n                placeholder=\"Enter your name\"\n                defaultValue={user.firstname}\n                onChange={handleChange}                                                                              \n              />\n              \n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"inputForName\">Student Lastname</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                name=\"lastname\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-describedby=\"Enter your Lastname\"\n                placeholder=\"Enter your Lastname\"\n                defaultValue={user.lastname}\n                onChange={handleChange}\n              />\n              {errors.lastname && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.lastname.message}\n                </span>\n              )}\n            </div>\n            \n            <div className=\"form-group \">\n              <label htmlFor=\"inputForEmail\">Enter Date of Birth</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                id=\"inputFordob\"\n                name=\"dob\"\n                type=\"date\"\n                className=\"form-control\"\n                aria-describedby=\"Enter date of birth\"\n                placeholder=\"Enter date of birth\"\n                defaultValue={user.dob}\n                onChange={handleChange}\n              />\n              {errors.dob && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.dob.message}\n                </span>\n              )}\n            </div>\n\n            <div className=\"form-group \">\n              <label htmlFor=\"inputForEmail\">Enter Percentage</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                id=\"inputForPercentage\"\n                name=\"percentage\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-describedby=\"Enter Percentage\"\n                placeholder=\"Enter Percentage \"\n                defaultValue={user.percentage}\n                onChange={handleChange}\n                \n              />\n              {errors.percentage && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.email.message}\n                </span>\n              )}\n            </div>\n            \n\n            <div className=\"form-group\">\n              <label htmlFor=\"inputForPassword\">Uplode Profile Image</label>\n              <span className=\"mandatory\">*</span>\n              <img\n                      src={\"http://\" + user.profile_picture}\n                      alt=\"profilePic\"\n                      style={{\n                        height: \"100px\",\n                        width: \"100px\",\n                        borderRadius: \"50%\",\n                        border: \"6px solid lightgrey\",\n                        boxShadow: \"0px 2px 6px grey\",\n                      }}\n                    />\n              {errors.profile_picture && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.profile_picture.message}\n                </span>\n              )}\n            </div>\n\n            <div className=\"d-flex pt-4 align-items-center justify-content-center\">\n              <button type=\"submit\" className=\"register_btn\">\n                Submit\n              </button>\n              <button className=\"login-btn\">\n                <Link to=\"/\">Back</Link>\n              </button>\n            </div>\n           \n          </form>\n          {/* ))} */}\n        </fieldset>\n      </div>\n    </div>\n  );\n};\n\nexport default Edit;\n","/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/Components/Notfound/NotFound.js",[],"/Users/naresh/Desktop/GitProject/client-build-react/client-react-build/src/Components/Dashboard/Table.js",["62","63","64","65","66","67","68","69","70"],"import React, { useState, useEffect ,useRef } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Table = (props) => {\n  const [user, setUsers] = useState([]);\n  const [success, setSuccess] = useState(false);\n  const [fail, setFail] = useState(false);\n  const inputElement = useRef(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [item, setItem] = useState({});\n  const onDelete = async (id) => {\n    console.log(id);\n    const toLogout = window.confirm(\"Are you sure to delete ?\");\n    if(toLogout){\n      await axios.delete(`https://student-management01.herokuapp.com/student/delete/${id}`).then((res) => {\n        if (res) {\n          console.log(res);\n          setSuccess(true);\n        } else {\n          setFail(true);\n        }\n      })\n    }\n    else{\n      setFail(true);\n    }\n\n  };\n\n\n\n  useEffect(async () => {\n    await axios.get(`https://student-management01.herokuapp.com/student/getAll`)\n      .then((res) => {\n        const response = res.data.res;\n        setUsers(response);\n      })\n\n  }, [user]);\n\n\n const getSearchTerm = () => {\n    searchHandler(inputElement.current.value);\n  };\n  \n  const searchHandler = (searchTerm) => {\n    setSearchTerm(searchTerm);\n    if (searchTerm !== \"\") {\n      const newItemsList = user.filter((items) => {\n        // console.log(Object.values(item));\n        return Object.values(items)\n          .join(\"\")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newItemsList);\n    } else {\n      setSearchResults(user);\n    }\n  };\n\n  let editButton;\n\n  return (\n    <>\n      <input\n            style={{\n                        height: \"50px\",\n                        width: \"400px\",\n                        borderRadius: \"0%,30%,0%,30%\",\n                        border: \"6px solid lightgrey\",\n                        boxShadow: \"0px 2px 6px grey\",\n                        marginLeft:\"130px\",\n                      }}\n          \n            ref={inputElement}\n            type=\"text\"\n            placeholder=\"Search by Name,Percentage\"\n            value={searchTerm}\n            onChange={getSearchTerm}\n          />\n          \n      <div>\n        <Alert show={success} dismissable variant=\"success\">\n          Deleted SuccessFully\n        </Alert>\n        <Alert show={fail} dismissable variant=\"danger\">\n          somethiing went wrong\n        </Alert>\n      </div>\n      <table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>S.No.</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Last Name</th>\n            <th scope=\"col\">Date Of Birth</th>\n            <th scope=\"col\">Percentage</th>\n            <th scope=\"col\">Profile Picture</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {searchResults.length > 1 || user.length > 1\n                ? (searchTerm.length < 1 ? user : searchResults)?.map((val, index) => (\n            <tr key={index}>\n              <th className=\"snumber\" scope=\"row\">\n                {val.id}\n              </th>\n              <td scope=\"col\">{val.firstname}</td>\n              <td scope=\"col\">{val.lastname}</td>\n              <td scope=\"col\">{val.dob}</td>\n              <td scope=\"col\">{val.percentage}</td>\n              <td scope=\"col\">\n              <img\n                      src={\"http://\" + val.profile_picture}\n                      alt=\"profilePic\"\n                      style={{\n                        height: \"100px\",\n                        width: \"100px\",\n                        borderRadius: \"50%\",\n                        border: \"6px solid lightgrey\",\n                        boxShadow: \"0px 2px 6px grey\",\n                      }}\n                    />\n              </td>\n              <td>\n                <Link to={`/edit/${val._id}`}>\n                  <button\n                    className=\"edit_button\"\n                    // onClick={props.handleShow}\n                    id={val.id}\n                  >\n                    <i class=\"far fa-edit\"></i>\n                  </button>\n                </Link>\n                <button\n                  className=\"delete_button\"\n                  onClick={() => onDelete(val._id)}\n                >\n                  <i class=\"far fa-trash-alt\"></i>\n                </button>\n              </td>\n            </tr>\n                 )) : \"No orders Found\"}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Table;\n",{"ruleId":"71","severity":1,"message":"72","line":4,"column":3,"nodeType":"73","messageId":"74","endLine":4,"endColumn":7},{"ruleId":"71","severity":1,"message":"75","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"76","line":8,"column":10,"nodeType":"73","messageId":"74","endLine":8,"endColumn":19},{"ruleId":"71","severity":1,"message":"77","line":8,"column":21,"nodeType":"73","messageId":"74","endLine":8,"endColumn":33},{"ruleId":"71","severity":1,"message":"78","line":9,"column":9,"nodeType":"73","messageId":"74","endLine":9,"endColumn":16},{"ruleId":"71","severity":1,"message":"79","line":10,"column":16,"nodeType":"73","messageId":"74","endLine":10,"endColumn":23},{"ruleId":"71","severity":1,"message":"80","line":12,"column":10,"nodeType":"73","messageId":"74","endLine":12,"endColumn":20},{"ruleId":"71","severity":1,"message":"81","line":13,"column":10,"nodeType":"73","messageId":"74","endLine":13,"endColumn":23},{"ruleId":"71","severity":1,"message":"82","line":14,"column":16,"nodeType":"73","messageId":"74","endLine":14,"endColumn":23},{"ruleId":"71","severity":1,"message":"83","line":26,"column":9,"nodeType":"73","messageId":"74","endLine":26,"endColumn":22},{"ruleId":"71","severity":1,"message":"84","line":5,"column":10,"nodeType":"73","messageId":"74","endLine":5,"endColumn":13},{"ruleId":"71","severity":1,"message":"85","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":22},{"ruleId":"71","severity":1,"message":"86","line":8,"column":8,"nodeType":"73","messageId":"74","endLine":8,"endColumn":17},{"ruleId":"71","severity":1,"message":"87","line":11,"column":5,"nodeType":"73","messageId":"74","endLine":11,"endColumn":13},{"ruleId":"71","severity":1,"message":"88","line":12,"column":5,"nodeType":"73","messageId":"74","endLine":12,"endColumn":17},{"ruleId":"71","severity":1,"message":"89","line":16,"column":10,"nodeType":"73","messageId":"74","endLine":16,"endColumn":17},{"ruleId":"71","severity":1,"message":"90","line":16,"column":19,"nodeType":"73","messageId":"74","endLine":16,"endColumn":29},{"ruleId":"71","severity":1,"message":"91","line":40,"column":10,"nodeType":"73","messageId":"74","endLine":40,"endColumn":18},{"ruleId":"71","severity":1,"message":"84","line":5,"column":10,"nodeType":"73","messageId":"74","endLine":5,"endColumn":13},{"ruleId":"71","severity":1,"message":"92","line":12,"column":10,"nodeType":"73","messageId":"74","endLine":12,"endColumn":16},{"ruleId":"71","severity":1,"message":"93","line":12,"column":18,"nodeType":"73","messageId":"74","endLine":12,"endColumn":27},{"ruleId":"71","severity":1,"message":"87","line":29,"column":5,"nodeType":"73","messageId":"74","endLine":29,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":51,"column":13,"nodeType":"96","endLine":59,"endColumn":4},{"ruleId":"94","severity":1,"message":"97","line":59,"column":6,"nodeType":"98","endLine":59,"endColumn":12,"suggestions":"99"},{"ruleId":"71","severity":1,"message":"100","line":13,"column":10,"nodeType":"73","messageId":"74","endLine":13,"endColumn":14},{"ruleId":"71","severity":1,"message":"82","line":13,"column":16,"nodeType":"73","messageId":"74","endLine":13,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":35,"column":13,"nodeType":"96","endLine":42,"endColumn":4},{"ruleId":"71","severity":1,"message":"101","line":65,"column":7,"nodeType":"73","messageId":"74","endLine":65,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":113,"column":19,"nodeType":"104","endLine":113,"endColumn":30},{"ruleId":"102","severity":1,"message":"103","line":114,"column":19,"nodeType":"104","endLine":114,"endColumn":30},{"ruleId":"102","severity":1,"message":"103","line":115,"column":19,"nodeType":"104","endLine":115,"endColumn":30},{"ruleId":"102","severity":1,"message":"103","line":116,"column":19,"nodeType":"104","endLine":116,"endColumn":30},{"ruleId":"102","severity":1,"message":"103","line":117,"column":19,"nodeType":"104","endLine":117,"endColumn":30},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'dashboard' is assigned a value but never used.","'setDashboard' is assigned a value but never used.","'history' is assigned a value but never used.","'setData' is assigned a value but never used.","'searchTerm' is assigned a value but never used.","'searchResults' is assigned a value but never used.","'setItem' is assigned a value but never used.","'getSearchTerm' is assigned a value but never used.","'Row' is defined but never used.","'ImageUploading' is defined but never used.","'Dashboard' is defined but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'formData' is assigned a value but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'item' is assigned a value but never used.","'editButton' is defined but never used.","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute",{"desc":"106","fix":"107"},"Update the dependencies array to be: [id, user]",{"range":"108","text":"109"},[1570,1576],"[id, user]"]